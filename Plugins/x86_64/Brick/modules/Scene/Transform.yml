.format: 4

Transform:
  .doc: Transform

  position:
    # .quantity: Position
    .type: Math.Vec3
    .value: Math.Vec3
    # Value-types have default, or should all values have defaults?
    # .value: Position()
  rotation:
    # .quantity: Rotation
    .type: Math.Quat
    .value: Math.Quat
    # .value: Rotation()

  # .transformers:
  #   - Rotation
  #   - Position


  # .constructors:
  #   FromSequence:
  #     doc: Construct a transformation by applying a list of partial transformations.
  #     parameters:
  #       sequence: List<Transform>

  vectorToWorld:
    .kind: Method
    localVector:
      .type: Vec3
    .return: Vec3

  TryFromToZXPair:
    .kind: Method
    .static: true
    .doc: >
      The reason this function exist is for helping the user to define the full rotation of a Transform using two vector pairs.
      We try to find a transform that primarily makes Z point to newZ and secondarily X point to newX.
      It is NOT equivalent to doing two FromTo rotations,
       FromTo(Z, newZ)
       FromTo(X, newX)
      since we are keeping the newZ axis fixed while trying to do rotate the X to newX.
      It is far from certain that the wanted transform of the newX is possible to put through.
    newZ:
      .type: Vec3
    newX:
      .type: Vec3
    .return: Transform
