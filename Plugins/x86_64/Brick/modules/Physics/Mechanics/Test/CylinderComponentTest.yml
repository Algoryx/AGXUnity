.format: 4
.strict: false

CylinderPart:
  .extends: Physics.Mechanics.RigidBody

  direction:
    .type: Int

  radius:
    .type: Real
    .value: 0.1

  length:
    .type: Real
    .value: 1

  geom:
    .type: Physics.Geometry.Cylinder
    radius: this.radius
    length: this.length
    localTransform:
      position: Vec3(0,this.length*0.5*this.direction, 0)

  axleAttachment:
    .type: Physics.Mechanics.CylindricalAttachment
    .value: Physics.Mechanics.CylindricalAttachment

  otherPartAttachment:
    .type: Physics.Mechanics.CylindricalAttachment
    .value: Physics.Mechanics.CylindricalAttachment
    localTransform:
      position: Vec3(0,this.length * this.direction, 0)
      rotation: Quat.TryFromToZXPair(Vec3.Y_Axis, Vec3.Z_Axis)

PistonRodCylinder:
  .extends: Physics.Component
  wantInternalPositioning: true
  piston:
    .type: CylinderPart
    direction: 1
    localTransform:
      position: Vec3(0,0,0) # Using piston as "root" body for cylinder
  rod:
    .type: CylinderPart
    direction: -1

  parentAttachment:
    .type: Physics.Mechanics.LockJointAttachment
    .value: Physics.Mechanics.LockJointAttachment

  pistonRodConnector:
    .type: Physics.Mechanics.CylindricalConnector
    distance: 1
    distanceConstrainDof: false
    angle: 0
    angleConstrainDof: true
    attachment1: this.piston.otherPartAttachment
    attachment2: this.rod.otherPartAttachment

WorldAttachment:
  .extends: Physics.Mechanics.CylindricalAttachment
  xPos:
    .type: Real
    .value: 0

  localTransform:
    position: Vec3(this.xPos,0,0)
    rotation: Quat.TryFromToZXPair(Vec3(0,1,0), Vec3(1,0,0))


DualCylindersFree:
  .extends: Physics.Component
  wantInternalPositioning: true

  worldAttachment1:
    .type: WorldAttachment
    xPos: -1

  worldAttachment2:
    .type: WorldAttachment
    xPos: 1

  cylinder1:
    .type: PistonRodCylinder
    .value: PistonRodCylinder

  cylinder2:
    .type: PistonRodCylinder
    .value: PistonRodCylinder


  worldConnector1:
    .type: Physics.Mechanics.CylindricalConnector
    attachment1: this.cylinder1.piston.axleAttachment
    attachment2: this.worldAttachment1

  worldConnector2:
    .type: Physics.Mechanics.CylindricalConnector
    attachment1: this.cylinder2.piston.axleAttachment
    attachment2: this.worldAttachment2

  cylinderCylinderConnector:
    .type: Physics.Mechanics.CylindricalConnector
    attachment1: this.cylinder1.rod.axleAttachment
    attachment2: this.cylinder2.rod.axleAttachment

DualFixLengthCylinders:
  .extends: DualCylindersFree
  cylinder1:
    pistonRodConnector:
      distanceConstrainDof: true
  cylinder2:
    pistonRodConnector:
      distanceConstrainDof: true

FixCylinderFreeCylinderPair:
  .extends: DualCylindersFree
  cylinder1:
    pistonRodConnector:
      distanceConstrainDof: true
  worldConnector1:
    angleConstrainDof: true
    angle: 0
### failing, but looks ok when loading with AGxBrick
# # TestDualCylinderConnectFail:
# #   .value: Physics.ComponentTest
# #   dualCylinder:
# #     .type: DualCylindersFree
# #     .value: DualCylindersFree

# #   cylinder2AttachedWorldTest:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder2.piston.axleAttachment.position.x
# #     rhs: 1
# #   cylinderConnectMiddleTest1:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder1.rod.axleAttachment.position.x
# #     rhs: -1 # Still at -1, success would have rotated it to 0
# #   cylinderConnectMiddleTest2:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder2.rod.axleAttachment.position.x
# #     rhs: 1 # Still at 1, success would have rotated it to 0

TestDualCylinderConnect:
  .value: Physics.ComponentTest
  wantInternalPositioning: true
  dualCylinder:
    .type: DualFixLengthCylinders
    .value: DualFixLengthCylinders

  cylinder1AttachedWorldTest:
    .value: Assertion.Equal
    lhs: dualCylinder.cylinder1.piston.axleAttachment.position.x
    rhs: -1

  cylinder2AttachedWorldTest:
    .value: Assertion.Equal
    lhs: dualCylinder.cylinder2.piston.axleAttachment.position.x
    rhs: 1

  cylinderConnectMiddleTest:
    .value: Assertion.Equal
    lhs: dualCylinder.cylinder1.rod.axleAttachment.position.x
    rhs: 0
### failing, but looks ok when loadin
# # TestOneCylinderRotatingAndStreaching:
# #   .value: Physics.ComponentTest

# #   dualCylinder:
# #     .type: FixCylinderFreeCylinderPair
# #     .value: FixCylinderFreeCylinderPair

# #   cylinder1NotRotatedTest:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder1.rod.axleAttachment.position.x
# #     rhs: -1 # rod attachment still at -1

# #   cylinder2RotatedTest:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder2.rod.axleAttachment.position.x
# #     rhs: -1

# #   cylinderRodsConnectedTest:
# #     .value: Assertion.Equal
# #     lhs: dualCylinder.cylinder2.rod.axleAttachment.position
# #     rhs: dualCylinder.cylinder1.rod.axleAttachment.position
